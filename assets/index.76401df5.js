import{v as t,c as e,p as n,a as i,b as o,d as s,e as a,r,o as l,F as c,f as d,w as p,g as h,h as u,i as m,j as f,k as y,l as w,m as g}from"./vendor.9298297b.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const n of t)if("childList"===n.type)for(const t of n.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),"use-credentials"===t.crossorigin?e.credentials="include":"anonymous"===t.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();let v=function e(n,i,o=t){if(n.id=o(),n.children&&!(n.children.length<1))return n.children.forEach((t=>{t.parent=n.id,e(t)})),n}({name:"root",alias:"/",children:[{name:"home",alias:"~",children:[{name:"dan",children:[{name:"about.txt",content:"\n                                <p>I'm Dan, a Web Developer living in Piha, New Zealand,</p>\n                                <p>I really enjoy making things people use every day from websites with cool animations to service based applications with an emphasis on usability and maintainability.</p>\n                                <p>When I'm not making stuff like this website I like hanging out with my partner Amy and my dog Pipit.</p>\n                                <p>I'm passionate about Privacy, Performance and Pizzaz.</p>\n                            "},{name:"contact.txt",content:"<p>Send me a message at dan@tate.nz if you're interested in working together.</p>"},{name:"todo.txt",content:'\n                                <p>There\'s lots to do!.</p>\n                                <ul>\n                                    <li>"../" Should move to the parent directory, this should be recursive so that ../../ attempts grandparent directory ect...</li>\n                                    <li>Implement options in "ls" "-a" giving more ( fake ) information and "-l" long listing the files.</li>\n                                    <li>Give the Terminal a theme.</li>\n                                    <li>Make another application.</li>\n                                    <li>Cat should be able to take multiple files ( like how cat actually works ).</li>\n                                    <li>commands should have man pages and a help command</li>\n                                    <li>Implement up go through command history</li>\n                                    <li>Implement tab completion</li>\n                                </ul>\n                            '}]}]}]});v=function t(e,n){if(e.path=void 0===n?e.name:`${n.path}/${e.name}`,e.children&&!(e.children.length<1))return e.children.forEach((n=>{t(n,e)})),e}(v);const b=e({state:()=>({fs:v})});const k={props:{id:String,decorations:Boolean},data:()=>({commands:["close"]}),methods:{close(){this.$bus.emit("close",this.id)}}};n("data-v-51c79fc2");const $={class:"window"},I={key:0,class:"decorations"},x={class:"application"};function T(t,e){if(!e)throw new Error("This function requires a path passed as the second parameter.");if(t.path===e)return t;let n=[];!function t(e){e.children.forEach((e=>{n.push(e),e.children&&t(e)}))}(t);const i=n.find((t=>e===t.path));if(!(null==i?void 0:i.path))throw new Error("Node with this path does not exist.");return i}i(),k.render=function(t,e,n,i,c,d){return l(),o("div",$,[n.decorations?(l(),o("div",I,[s("button",{onClick:e[0]||(e[0]=(...t)=>d.close&&d.close(...t))},"close")])):a("",!0),s("div",x,[r(t.$slots,"default",{},void 0,!0)])])},k.__scopeId="data-v-51c79fc2";const E=[{key:"/",value:"root"},{key:"~",value:"root/home/dan"},{key:"",value:"root/home/dan"}];const L={data:()=>({value:"",commandHistory:[],history:[],commands:["clear","help","ls","cd","cat"],applications:["Terminal"],user:"guest",host:"website",pwd:"root/home/dan"}),computed:{dir(){return T(this.$store.state.fs,this.pwd)},prompt(){return`<span class="user">${this.user}</span>@<span class="hostname">${this.host}</span><span class="cwd">${this.pwd}</span><span>$</span>`}},mounted(){this.focus()},methods:{focus(){this.$refs.input.focus()},keydown(t){13===t.keyCode&&this.input(this),38===t.keyCode&&this.previous()},input(){this.commandHistory.push(this.value),this.history.push(`${this.prompt} ${this.value}`);let{command:t,args:e,opts:n}=function(t){let e=(t=t.replace(/\s+/g," ").split(" ")).shift(),n=[],i=[];return t.forEach((t=>{"-"===t[0]?n.push(t.substr(1,t.length-1)):i.push(t)})),{command:e,opts:n,args:i}}(this.value),i=`${this.prompt} That command does not exist, type help for more info.`;this.commands.indexOf(t)>-1&&(i=this[t](this.dir.children,e,n),this.output(i)),this.applications.indexOf(t)>-1&&this.$bus.emit("launch",t)},output(t){this.history.push(t),this.value=""},previous(){this.value=this.commandHistory[this.commandHistory.length-1]},clear(){this.history=[],this.output()},help(){this.history.push(`You can try typing ${this.commands.join(", ")}. Good luck.`),this.value=""},ls(){const t=T(this.$store.state.fs,this.pwd).children.map((t=>t.name)).join(" ");this.output(t)},cd(t,e,n){let i=t.find((({name:t})=>t===e[0]));if(i)this.pwd=i.path;else try{i=function(t,e="",n){let i=!1;const o=E.find((t=>t.key===e)),s=E.find((t=>t.key===e[0]));s&&(e=s.value+e.substr(0,e.length)),void 0!==o&&(e=o.value);try{i=T(t,e)}catch(a){throw new Error(`${e.split("/").pop()} No such file or directory.`)}if(i.content)throw new Error(`${e.split("/").pop()} is not a directory.`);return i}(this.$store.state.fs,e[0]),this.pwd=i.path}catch(o){this.output(o.message)}},cat:function(t,e,n){let i="";0===e.length&&0===n&&(i="cat requires an argument or option to be passed. Try seeing what you can pass by typing ls."),n&&n.length&&n.indexOf("-help")>-1&&(i="\n            <p>Usage: cat [option]... [FILE]...</p>\n            <p>Concatenate File(s) to standard output.</p>\n            <table>\n                <tr>\n                    <td>--help</td><td>display this help and exit</td>\n                </tr>\n            </table>\n        ");let o=t.find((t=>t.name===e[0]));return o&&(i=o.content),i}}},H={ref:"output",class:"output"},M=["innerHTML"],P={class:"input"},C=["innerHTML"];L.render=function(t,e,n,i,a,r){return l(),o("div",{class:"terminal",onClick:e[2]||(e[2]=(...t)=>r.focus&&r.focus(...t))},[s("div",H,[(l(!0),o(c,null,d(a.history,((t,e)=>(l(),o("div",{class:"history",key:e,innerHTML:t},null,8,M)))),128))],512),s("div",P,[s("div",{ref:"prompt",class:"prompt",innerHTML:r.prompt},null,8,C),p(s("input",{spellcheck:"false",ref:"input",type:"text","onUpdate:modelValue":e[0]||(e[0]=t=>a.value=t),onKeydown:e[1]||(e[1]=(...t)=>r.keydown&&r.keydown(...t))},null,544),[[h,a.value]])])])};const N={components:{Window:k,Terminal:L},data:()=>({windows:[]}),mounted(){this.launch({application:L}),this.$bus.on("launch",(t=>{this.launch({application:t,decorations:!0})})),this.$bus.on("close",(t=>{const e=this.windows.findIndex((e=>e.id===t));e>-1&&this.windows.splice(e,1)}))},methods:{launch({application:t,decorations:e}){this.windows.push({id:this.windows.length,application:t,decorations:e})}}};N.render=function(t,e,n,i,s,a){const r=u("Window");return l(!0),o(c,null,d(s.windows,(t=>(l(),m(r,{id:t.id,decorations:t.decorations},{default:f((()=>[(l(),m(y(t.application),{id:"app.id"}))])),_:2},1032,["id","decorations"])))),256)};const W={components:{WindowManager:N}};W.render=function(t,e,n,i,o,s){const a=u("WindowManager");return l(),m(a)};const j=w(W);j.config.globalProperties.$bus=g(),j.use(b),j.mount("#app");
